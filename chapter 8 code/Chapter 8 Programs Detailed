AlgWB6:
Write Code That makes a copy of a string with all occurrences of the lowercase letter 't' converted to uppercase

How I solved it:

#######################################################################################################################

AlgWB10:
mystring='cookies>milk>fudge>cake>ice cream'

Write a statement that splits the string, creating the following list:
['cookies','milk','fudge','cake','ice cream']

How I solved it:

#######################################################################################################################

PROGRAMMING EXERCISE:

Exercise 1 initials.py:
Write a program that gets as string containing a person's first, middle, and last names, display their first,
middle, and last initials. For example, if the user enters 'John William Smith', the program should display
"J.W.S"

How I solved it:

#######################################################################################################################

Exercise 3 date.py:
Write a program that reads a string from the user containing a date in the form mm/dd/yyyy. It should print the date
in the format March 12, 2018.

Initial Ideas:
The first idea that came to mind was allowing the user to input any number between 1 and 12 to select their month. I would
first need to assign those numbers months(strings). Kind of like my rainfall.py program I did last week. I am going to need to
read the user input. For example below is what the user will see when the program is launched.

              "Please input the current date in mm/dd/yyyy format. PLEASE use "/" !"
              (input) Date: 07/30/1997

              (output)String: July 30, 1997

I feel like I can create a rough draft in now time using one month to start it out. The rest should be fairly easy.

#######################################################################################################################

Exercise 12 piglatin.py:

Create a program that accepts a sentence as input and converts each word to "Pig Latin". Just adding ay at the end of
each word.

Initial Ideas:
Taking the user input and appending ay at the end and then printing the results.



######################################################################################################################

Exercise 13 separator.py:

Write a program that accepts as input a sentence in which all of the words are run together, but the first character of
each word is uppercase. Convert the sentence to a string in which the words are seperated by spaces, and only the first
word starts with an uppercase letter. For example the string "StopAndSmellTheRoses" would be converted to
"Stop and smell the roses."


